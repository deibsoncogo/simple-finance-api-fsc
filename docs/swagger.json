{
  "swagger": "2.0",
  "info": {
    "title": "Simple Finance API",
    "description": "API for Simple Finance that allows users to manage their finances",
    "version": "1.0.0"
  },
  "paths": {
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "ID of the user to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsErrorResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User delete successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/{userId}/balance": {
      "get": {
        "summary": "Get user balance by user ID",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "ID of the user to get balance"
          }
        ],
        "responses": {
          "200": {
            "description": "User balance found",
            "schema": {
              "$ref": "#/definitions/UserBalanceParams"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "summary": "Create a new transaction",
        "tags": ["Transaction"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateTransactionParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsErrorResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "get": {
        "summary": "Get transactions by user ID",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "ID of the user to get transactions"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "patch": {
        "summary": "Update transaction by ID",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "ID of the transaction to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTransactionParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsErrorResponse"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete transaction by ID",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "ID of the transaction to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction delete successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "03d39629-515b-4087-b757-98bd53de329a"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "UserBalanceParams": {
      "type": "object",
      "properties": {
        "totalEarnings": {
          "type": "string",
          "example": "1000"
        },
        "totalExpenses": {
          "type": "string",
          "example": "500"
        },
        "totalInvestments": {
          "type": "string",
          "example": "1000"
        },
        "totalBalance": {
          "type": "string",
          "example": "500"
        }
      }
    },
    "UpdateUserParams": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Bento"
        },
        "lastName": {
          "type": "string",
          "example": "Kevin"
        },
        "email": {
          "type": "string",
          "example": "bento@kevin.com"
        },
        "password": {
          "type": "string",
          "example": "passwordNew"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "47cebae1-4b80-44e8-ad51-8ef6bc69f117"
        },
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "date": {
          "type": "string",
          "example": "2024-08-07T20:08:55.000Z"
        },
        "amount": {
          "type": "number",
          "example": 1000
        },
        "userId": {
          "type": "string",
          "example": "03d39629-515b-4087-b757-98bd53de329a"
        },
        "type": {
          "type": "string",
          "example": "earning",
          "description": "Types valid is earning, expense and investment"
        }
      }
    },
    "CreateTransactionParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "date": {
          "type": "string",
          "example": "2024-08-07T20:08:55.000Z"
        },
        "amount": {
          "type": "number",
          "example": 1000
        },
        "userId": {
          "type": "string",
          "example": "03d39629-515b-4087-b757-98bd53de329a"
        },
        "type": {
          "type": "string",
          "example": "earning",
          "description": "Types valid is earning, expense and investment"
        }
      }
    },
    "UpdateTransactionParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Salary and overtime"
        },
        "date": {
          "type": "string",
          "example": "2024-08-01T10:30:20.000Z"
        },
        "amount": {
          "type": "number",
          "example": 1500
        },
        "type": {
          "type": "string",
          "example": "earning",
          "description": "Types valid is earning, expense and investment"
        }
      }
    },
    "UserNotFoundErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User not found"
        }
      }
    },
    "TransactionNotFoundErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Transaction not found"
        }
      }
    },
    "InvalidParamsErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid params"
        }
      }
    },
    "InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    }
  }
}
